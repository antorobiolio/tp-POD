# -*- coding: utf-8 -*-
"""TP POD Grupal.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qymATXLT8NFWHwquqtM53W3jMMVco1Y9

TP Grupal

2024

Matias Alevi,
Antonella Robiolio,
Alexey Marassi,
Agos
"""

!pip install kagglehub

# se carga el kaggle api con el token personal
# se genera en la pagina web de kaggle > ajustes de cuenta > API > Generate New Token

# subir el archivo kaggle.json a colab

from google.colab import files
files.upload()

import os
import zipfile
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

# se descarga el dataset de la pagina web de kaggle
!kaggle datasets download -d ziya07/student-health-data

# descomprime el archivo zip
!unzip student-health-data.zip -d student-health-data

data = pd.read_csv('student-health-data/student_health_data.csv')

# pandas
data.head()

tamanio= data.shape
print(tamanio)

matriz = data['Health_Risk_Level'].value_counts()
matriz_df = matriz.rename_axis('Health_Risk_Level').reset_index(name='Count')
matriz_pivot = data.pivot_table(index='Health_Risk_Level', aggfunc='size')
print(matriz_pivot)

matriz_actividad = data['Physical_Activity'].value_counts()
matriz_actividad_df = matriz_actividad.rename_axis('Physical_Activity').reset_index(name='Count')
matriz_pivot = data.pivot_table(index='Physical_Activity', aggfunc='size')
print(matriz_pivot)

# matplotlib y seaborn

tabla = data.groupby(['Physical_Activity', 'Sleep_Quality']).size().unstack()

tabla.plot(kind='bar', figsize=(10, 6))
plt.title('Relación entre Calidad de Sueño y Actividad Física')
plt.xlabel('Actividad Física')
plt.ylabel('Cantidad')
plt.legend(title='Calidad de Sueño')
plt.xticks(rotation=0)
plt.show()

actividad_por_edad = data.groupby(['Age', 'Physical_Activity']).size().unstack()
print(actividad_por_edad)

# grafcio de barras para varias edad agrupados
actividad_por_edad.plot(kind='bar', figsize=(12, 7))
plt.title('Relación entre Edad y Nivel de Actividad Física')
plt.xlabel('Edad')
plt.ylabel('Cantidad')
plt.legend(title='Nivel de Actividad Física')
plt.xticks(rotation=45)
plt.show()

promedio_por_edad = data.groupby('Age')['Heart_Rate'].mean().reset_index()
print(round(promedio_por_edad,2))

plt.figure(figsize=(12, 7))
plt.plot(promedio_por_edad['Age'], promedio_por_edad['Heart_Rate'], marker='o', linestyle='-', label='Promedio de Frecuencia Cardíaca')
plt.title('Relación entre Edad y Frecuencia Cardíaca Promedio')
plt.xlabel('Edad')
plt.ylabel('Frecuencia Cardíaca Promedio (bpm)')
plt.grid(True)
plt.legend()
plt.show()

# plotly.expres para visualizaciones interactivas

fig = px.box(data,
             x='Physical_Activity',
             y='Heart_Rate',
             color='Physical_Activity',
             title='Relación entre Frecuencia Cardíaca y Nivel de Actividad Física',
             labels={'Physical_Activity': 'Nivel de Actividad Física', 'Heart_Rate': 'Frecuencia Cardíaca (bpm)'},
             width=800,
             height=500)

fig.show()

# seaborn para visualizar datos, parecido a matplotlib pero mas avanzado
promedio_por_edad_actividad = data.groupby(['Age', 'Physical_Activity'])['Heart_Rate'].mean().reset_index()

# grafico de lineas
plt.figure(figsize=(12, 6))
sns.lineplot(
    data=promedio_por_edad_actividad,
    x='Age',
    y='Heart_Rate',
    hue='Physical_Activity',
    style='Physical_Activity',
    markers=True,
    dashes=False,
    palette='viridis'
)

plt.title('Relación entre Edad, Ritmo Cardíaco y Nivel de Actividad Física', fontsize=16)
plt.xlabel('Edad', fontsize=14)
plt.ylabel('Ritmo Cardíaco Promedio (bpm)', fontsize=14)
plt.grid(True)
plt.legend(title='Nivel de Actividad Física', fontsize=12)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.tight_layout()

plt.show()